{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./support/noop.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./engineio/transport.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/component-bind/index.js","webpack:///./lib/on.js","webpack:///./lib/socket.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./engineio/transports/index.js","webpack:///./lib/manager.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/to-array/index.js","webpack:///./engineio/transports/wx_websocket.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./engineio/transports/polling.js","webpack:///./engineio/transports/wx_xhr.js","webpack:///./engineio/socket.js","webpack:///./engineio/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./lib/url.js","webpack:///./lib/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","global","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","apply","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","Emitter","obj","key","mixin","on","addEventListener","event","fn","_callbacks","once","off","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emit","args","slice","listeners","hasListeners","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","b","constructor","parser","Transport","opts","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","Error","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","isArray","arr","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","JSON","stringify","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","concat","ev","toArray","bind","parseqs","hasBin","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","onopen","options","compress","pop","onclose","reason","onpacket","onconnect","onevent","onack","ondisconnect","ack","self","sent","emitBuffered","indexOf","prev","alphabet","seed","num","Math","floor","yeast","now","Date","decoded","withNativeBlob","withNativeFile","File","Buffer","isBuffer","toJSON","XHR","websocket","polling","xd","xs","jsonp","location","isSSL","xdomain","xscheme","forceJSONP","JSONP","eio","Backoff","has","Manager","uri","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","lastPing","encoding","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","skipReconnect","openSub","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","processPacketQueue","shift","subsLength","reset","delay","duration","onreconnect","attempt","withNativeBuffer","withNativeArrayBuffer","isView","re","parts","src","replace","exec","source","host","authority","ipv6uri","ms","factor","pow","rand","random","deviation","list","array","inherit","WS","forceBase64","perMessageDeflate","usingBrowserWebSocket","protocols","headers","params","url","header","method","success","res","fail","ws","wx","connectSocket","addEventListeners","onMessage","schema","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobConstructor","chars","lookup","arraybuffer","bytes","encoded1","encoded2","encoded3","encoded4","bufferLength","webpackPolyfill","deprecate","paths","children","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","ucs2encode","count","err_cb","bail","proxy","start","end","abv","ii","Polling","poll","pause","onPause","doPoll","callbackfn","doWrite","sid","requestTimeout","Request","async","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","onLoad","document","requestsCount","onSuccess","fromError","xhr","attachEvent","transports","parseuri","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","threshold","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","j","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","loc","href","cache","managers","parsed","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"socket.io.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = function() {\n  return function() {}\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Module dependencies\n */\n\n// var XHR = require('./polling-xhr');\n// var JSONP = require('./polling-jsonp');\n// var websocket = require('./websocket');\n\nvar XHR = require('./wx_xhr');\nvar websocket = require('./wx_websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n\n  if (!opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('../engineio/index');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket=true\n  this.protocols = opts.protocols;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  var self=this;\n  var params={\n    url:uri,\n    protocols,\n    header:opts.headers,\n    method: opts.method || 'GET',\n    success:function(res){\n        debug('connectSocket success',res)\n    },\n    fail:function(err){\n        debug('*** connectSocket fail')\n        this.emit('error',err)\n    }\n  }\n\n  try {\n    this.ws = wx.connectSocket(params);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onOpen(function () {\n    debug('wx onSocketOpen')\n    self.onOpen();\n  });\n  this.ws.onClose(function () {\n    debug('wx onSocketClose')\n    self.onClose();\n  });\n  this.ws.onMessage(function (data) {\n    debug('wx onSocketMessage ',data)\n    self.onData(data.data);\n  });\n  this.ws.onError(function (e) {\n    debug('wx onSocketError ',e)\n    self.onError('websocket error', e);\n  });\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\n        var params={\n            data:data,\n            success: function(res) {\n                debug('wx.sendSocketMessage success', res)\n            },\n            fail: function(err) {\n                debug('wx.sendSocketMessage fail', err)\n            },\n        }\n        try {\n            self.ws.send(params);\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close({\n        success: function() {\n            debug('close success')\n        },\n        fail: function(err) {\n            debug('close fail', err)\n        },\n    });\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\n\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    debug('###1',packet);\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n  \n  debug('####',this.supportsBinary);\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('wx_xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n    debug('wx_xhr XHR',opts);\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var self=this;\n\n  var params={\n    url:this.uri,\n    method:this.method,\n    data:this.data,\n    header:{\n    },\n    success:function(res){\n        self.res=res;\n        self.onLoad();\n    },\n    fail:function(err){\n        self.onError(err);\n    },\n  }\n\n  if (this.extraHeaders) {\n    for (var i in this.extraHeaders) {\n      if (this.extraHeaders.hasOwnProperty(i)) {\n        params.header[i]=this.extraHeaders[i];\n      }\n    }\n  }\n\ndebug('params',params);\n\n  try {\n    wx.request(params);\n  } catch (e) {\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n    this.onData(this.res.data);\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n    debug('handshake',data);\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\nwindow.io=lookup\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');"],"sourceRoot":""}